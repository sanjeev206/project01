pipeline 
{
  agent 
  {
    docker 
    {
      image 'sanju206/maven-docker-sanju-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages 
  {
    stage('Checkout') 
    {
      steps {
        sh 'echo passed'
        git branch: 'master', url: 'https://github.com/sanjeev206/project01.git'
      }
    }
    stage('Build and Test') 
    {
      steps 
      {
        sh 'ls -ltr'
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sanju206/initial-p01-cicd:${BUILD_NUMBER}"
        DOCKERFILE_LOCATION = "spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }

    stage('Update k8s file in github'){
        environment {
            GIT_REPO_NAME = "project01"
            GIT_USER_NAME = "sanjeev206"
        }
        steps {
            withCredentials([string(credentialsId: 'git-cred', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "sanjeev.sharma@gmail.com"
                    git config user.name "Sanjeev Sharma"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                    git add spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                '''
                }
            }
        }
    }
}
